name: Deployment

on:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  PROJECT_NAME: html-elements-showcase
  RELEASE_FILENAME: html-elements-showcase.zip

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    env:
      HES_OUT_DIR: ./dist
      HES_DEBUG: 0
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Generate site
        run: uv run html-elements-showcase

      - name: Upload output as artifact for GitHub pages
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: ${{ env.HES_OUT_DIR }}/${{ env.PROJECT_NAME }}/

      - name: Zip output for GitHub release
        run: (cd "$HES_OUT_DIR" && zip -r "../$RELEASE_FILENAME" "./$PROJECT_NAME")

      - name: Upload zipped output as artifact for a GitHub release
        uses: actions/upload-artifact@v4
        with:
          name: github-release
          path: ${{ env.RELEASE_FILENAME }}
          if-no-files-found: error
          retention-days: 1

      - name: Update git tag for continuous-release
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -f continuous-release
          git push -f origin continuous-release

  deploy:
    needs: build
    permissions:
      contents: write
      id-token: write
      pages: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

      - name: Download artifact for GitHub release
        uses: actions/download-artifact@v4
        with:
          name: github-release

      - name: Deploy GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: continuous-release
          name: "Continuous release (${{ github.event.head_commit.timestamp }})"
          body: |
            This is an automatically updated release containing the generated files based on the latest commit.

            Commit: ${{ github.event.head_commit.id }}
            Commit date and time: ${{ github.event.head_commit.timestamp }}
          files: ${{ env.RELEASE_FILENAME }}
